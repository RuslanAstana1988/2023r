let handler = async (m, { conn, usedPrefix, command, args, isOwner, isAdmin, isROwner }) => {
const sections = [
{
title: `ùêãùêàùêíùêìùêÄ ùêÉùêÑ ùêéùêèùêÇùêàùêéùêçùêÑùêí`,
rows: [
{title: "‚ú® | –ü–†–ò–í–ï–¢–°–¢–í–ò–ï", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –í–´–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ`},
{title: "üåé | –ü–£–ë–õ–ò–ß–ù–´–ô", description: "–ë–û–¢ –°–¢–ê–ù–û–í–ò–¢–°–Ø –ü–£–ë–õ–ò–ß–ù–´–ú –ò–õ–ò –ß–ê–°–¢–ù–´–ú –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï–ú", rowId: `${usedPrefix + command} –ø—É–±–ª–∏—á–Ω—ã–π`},
{title: "ü•µ | –ú–ï–î–ò–Ø 18+", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨ +18", rowId: `${usedPrefix + command} –º–µ–¥–∏—è+18`},
{title: "üîó | –ê–ù–¢–ò –°–°–´–õ–ö–ê", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞`},   
{title: "üîó | –ê–ù–¢–ò –°–°–´–õ–ö–ê ùü∏", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2`},    
{title: "üîé | –û–ë–ù–ê–†–£–ñ–ò–¢–¨", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å`},      
{title: "‚ùó | –û–ì–†–ê–ù–ò–ß–ò–¢–¨", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å`},    
{title: "‚òëÔ∏è | –ê–í–¢–û –ß–¢–ï–ù–ò–ï", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–≤—Ç–æ—á—Ç–µ–Ω–∏–µ`},
{title: "üîä | –ê–£–î–ò–û", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞—É–¥–∏–æ`},
{title: "üëæ | –ê–í–¢–û –°–¢–ò–ö–ï–†", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–≤—Ç–æ—Å—Ç–∏–∫–∏`},
{title: "üí¨ | –ë–õ–û–ö", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –±–ª–æ–∫`},
{title: "üè¢ | –¢–û–õ–¨–ö–û –ì–†–£–ü–ü–´", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} —Ç–æ–ª—å–∫–æ–≥—Ä—É–ø–ø–∞`},
{title: "‚ùå | –ê–ù–¢–ò–í–ò–î–ï–ù–¨–ï", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–≤–∏–¥–µ–Ω–∏–µ`},
{title: "üìµ | –ü–†–û–¢–ò–í–û–£–ì–û–ù–ù–´–ô", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨ ", rowId: `${usedPrefix + command} –ø—Ä–æ—Ç–∏–≤–æ—É–≥–æ–Ω–Ω—ã–π`},
{title: "üí¨ | –ß–ê–°–¢–ù–´–ô", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} —á–∞—Å—Ç–Ω—ã–π`},
{title: "ü§¨ | –ê–ù–¢–ò –¢–û–ö–°–ò–ß–ù–´–ô", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Ç–æ–∫—Å–∏—á–Ω—ã–π`},
{title: "üï∏Ô∏è | –ê–ù–¢–ò–¢–†–ê–ë–ê", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Ç—Ä–∞–±–∞`},
{title: "üëéüèª | –ê–ù–¢–ò –ò–ù–î–£–°", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–∏–Ω–¥—É—Å`}, 
{title: "ü§ñ | –ú–û–î–ï –ë–û–¢", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} –º–æ–¥–µ–±–æ—Ç`}, 
{title: "üëë | –¢–û–õ–¨–ö–û –ê–î–ú–ò–ù", description: "–í–ö–õ–Æ–ß–ò–¢–¨ –ò–õ–ò –û–¢–ö–õ–Æ–ß–ò–¢–¨", rowId: `${usedPrefix + command} —Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω`},    
]}, ]

//let name = await conn.getName(m.sender)
const listMessage = {
text: ' ',
footer: `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–ø—É–±–ª–∏—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–ø—É–±–ª–∏—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–º–µ–¥–∏—è+18*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–º–µ–¥–∏—è+18*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–æ–±–Ω–∞—Ä—É–∂–∏—Ç—å*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–æ–±–Ω–∞—Ä—É–∂–∏—Ç—å*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–±–ª–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–±–ª–æ–∫*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *—Ç–æ–ª—å–∫–æ–≥—Ä—É–ø–ø–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *—Ç–æ–ª—å–∫–æ–≥—Ä—É–ø–ø–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—á—Ç–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—á—Ç–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞—É–¥–∏–æ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞—É–¥–∏–æ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–≤–∏–¥–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–≤–∏–¥–µ–Ω–∏–µ*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–≤—Ç–æ—Å—Ç–∏–∫–µ—Ä*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–ø—Ä–æ—Ç–∏–≤–æ—É–≥–æ–Ω–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–ø—Ä–æ—Ç–∏–≤–æ—É–≥–æ–Ω–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *—á–∞—Å—Ç–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *—á–∞—Å—Ç–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ç–æ–∫—Å–∏—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ç–æ–∫—Å–∏—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ç—Ä–∞–±–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏—Ç—Ä–∞–±–∞*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∞—Ä–∞–±–∏–∫–∏*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–∞–Ω—Ç–∏–∞—Ä–∞–±–∏–∫–∏*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *–æ–±–º–æ—Ä–æ—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *–æ–±–º–æ—Ä–æ—á–Ω—ã–π*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å *—Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω*_
‚î£ ‡∂¨‚Éü‚ÑπÔ∏è _${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å *—Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω*_
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ`,
title: null,
buttonText: "–°–¢–†–û–ö–ê –ö–û–ú–ê–ù–î –ë–õ–Ø –ì–†–£–ü–ü–´",
sections }

let isEnable = /true|–≤–∫–ª—é—á–∏—Ç—å|(turn)?on|1/i.test(command)
let chat = global.db.data.chats[m.chat]
let user = global.db.data.users[m.sender]
let bot = global.db.data.settings[conn.user.jid] || {}
let type = (args[0] || '').toLowerCase()
let isAll = false, isUser = false
switch (type) {
case '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.welcome = isEnable
break
case '–æ–±–Ω–∞—Ä—É–∂–∏—Ç—å':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.detect = isEnable
break
case '—É–¥–∞–ª–µ–Ω–∏–µ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('rowner', m, conn)
throw false
}}
chat.delete = isEnable
break
case '–∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.delete = !isEnable
break
case '–ø—É–±–ª–∏—á–Ω—ã–π':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['self'] = !isEnable
break
case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink = isEnable
break
case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink2 = isEnable 
break
case '–∞–Ω—Ç–∏–≤–∏–¥–µ–Ω–∏–µ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiviewonce = isEnable 
break
case '–º–µ–¥–∏—è+18':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.modohorny = isEnable          
break
case '–∞–≤—Ç–æ—Å—Ç–∏–∫–∏':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('owner' , m, conn)
throw false
}}
chat.modohorny = isEnable          
break
case '—Ç–æ–ª—å–∫–æ–∞–¥–º–∏–Ω':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.modoadmin = isEnable          
break    
chat.autosticker = isEnable          
break
case '–∞—É–¥–∏–æ':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.audios = isEnable          
break
case '–æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å':
isAll = true
if (!isOwner) {
global.dfail('owner', m, conn)
throw false
}
bot.restrict = isEnable
break
case '–º–∞–∫':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['nyimak'] = isEnable
break
case '–∞–≤—Ç–æ—á—Ç–µ–Ω–∏–µ':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['autoread'] = isEnable
break
case '–±–ª–æ–∫':
case 'privateonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['pconly'] = isEnable
break
case 'gconly':
case 'grouponly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['gconly'] = isEnable
break
case '–æ–±–º–æ—Ä–æ—á–Ω—ã–π':
case 'statusonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['swonly'] = isEnable
break
case '–ø—Ä–æ—Ç–∏–≤–æ—É–≥–æ–Ω–Ω—ã–π':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiCall = isEnable
break
case '—á–∞—Å—Ç–Ω—ã–π':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiPrivate = isEnable
break
case '–∞–Ω—Ç–∏—Ç–æ–∫—Å–∏—á–Ω—ã–π':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
bot.antiPrivate = isEnable
break
case '–º–æ–¥–µ–±–æ—Ç':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.modejadibot = isEnable
break  
chat.antiToxic = isEnable
break
case '–∞–Ω—Ç–∏—Ç—Ä–∞–±–∞':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiTraba = isEnable
break
case '–∞–Ω—Ç–∏–∏–Ω–¥—É—Å':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiArab = isEnable  
break
default:
if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, listMessage)
throw false
}
conn.sendButton(m.chat, `üóÇÔ∏è –í–´–ë–û–†: ${type} 
üéöÔ∏è –ö–û–ú–ê–ù–î–ê: ${isEnable ? '–í–ö–õ–Æ–ß–ò–ù–ê' : '–û–¢–ö–õ–Æ–ß–ò–ù–ê'}
üì£ –î–õ–Ø: ${isAll ? '–≠–¢–û–¢ –ë–û–¢' : isUser ? '' : '–≠–¢–û–¢ –ß–ê–¢'}`, author, null, [[`${isEnable ? '‚úñÔ∏è –û–¢–ö–õ–Æ–ß–ò–¢–¨ ‚úñÔ∏è' : '‚úîÔ∏è –í–ö–õ–Æ–ß–ò–¢–¨ ‚úîÔ∏è'}`, `${isEnable ? `#–≤—ã–∫–ª—é—á–∏—Ç—å ${type}` : `#–≤–∫–ª—é—á–∏—Ç—å ${type}`}`], ['üëæ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ üëæ', '#menu']], m)}
handler.help = ['–≤–∫–ª', '–≤—ã–∫–ª'].map(v => v + '—é—á–∏—Ç—å <option>')
handler.tags = ['group', 'owner']
handler.command = /^((–≤–∫|–≤—ã–∫)–ª—é—á–∏—Ç—å|(tru|fals)e|(turn)?[01])$/i
export default handler
